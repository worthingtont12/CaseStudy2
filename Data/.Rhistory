b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table03[1,1] <- mean(b1vec)
Table03[1,2] <- mean(b2vec)
Table03[1,3] <- mean(b3vec)
#standard deviation
Table03[1,4]<-sd(b1vec)
Table03[1,5]<-sd(b2vec)
Table03[1,6]<-sd(b3vec)
#coverage
Table03[1,7]<-sum(b1vec_true)/1000
Table03[1,8]<-sum(b2vec_true)/1000
Table03[1,9]<-sum(b3vec_true)/1000
Table03[1,10]<-mean(msevec)
Table03[1,11]<-"Listwise"
#column names
colnames(Table03) <- c("Mean of Intercept", "Mean of x1", "Mean of x2", "Sd of Intercept", "Sd of x1", "Sd of x2", "True Intercept Exists", "True x1 Exists", "True x2 Exists", "Method")
#Arithmetic mean imputation for data 1
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data01[sample(c(1:nrow(data01)),500,replace = TRUE), ]#1
#linear model with mean imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] = mean(data01.sample.temp$y, na.rm=TRUE)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table01[2,1] <- mean(b1vec)
Table01[2,2] <- mean(b2vec)
Table01[2,3] <- mean(b3vec)
#standard deviation
Table01[2,4]<-sd(b1vec)
Table01[2,5]<-sd(b2vec)
Table01[2,6]<-sd(b3vec)
#coverage
Table01[2,7]<-sum(b1vec_true)/1000
Table01[2,8]<-sum(b2vec_true)/1000
Table01[2,9]<-sum(b3vec_true)/1000
Table01[2,10]<-mean(msevec)
Table01[2,11]<-"Mean Imputation"
#Arithmetic mean imputation for data 2
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data02[sample(c(1:nrow(data02)),500,replace = TRUE), ]#1
#linear model with mean imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] = mean(data01.sample.temp$y, na.rm=TRUE)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table02[2,1] <- mean(b1vec)
Table02[2,2] <- mean(b2vec)
Table02[2,3] <- mean(b3vec)
#standard deviation
Table02[2,4]<-sd(b1vec)
Table02[2,5]<-sd(b2vec)
Table02[2,6]<-sd(b3vec)
#coverage
Table02[2,7]<-sum(b1vec_true)/1000
Table02[2,8]<-sum(b2vec_true)/1000
Table02[2,9]<-sum(b3vec_true)/1000
Table02[2,10]<-mean(msevec)
Table02[2,11]<-"Mean Imputation"
#Arithmetic mean imputation for data 3
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data03[sample(c(1:nrow(data03)),500,replace = TRUE), ]#1
#linear model with mean imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] = mean(data01.sample.temp$y, na.rm=TRUE)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table03[2,1] <- mean(b1vec)
Table03[2,2] <- mean(b2vec)
Table03[2,3] <- mean(b3vec)
#standard deviation
Table03[2,4]<-sd(b1vec)
Table03[2,5]<-sd(b2vec)
Table03[2,6]<-sd(b3vec)
#coverage
Table03[2,7]<-sum(b1vec_true)/1000
Table03[2,8]<-sum(b2vec_true)/1000
Table03[2,9]<-sum(b3vec_true)/1000
Table03[2,10]<-mean(msevec)
Table03[2,11]<-"Mean Imputation"
#Regression imputation for data 1
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data01[sample(c(1:nrow(data01)),500,replace = TRUE), ]#1
#linear model with regression imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] <- predict(lm(y~.,na.action=na.omit, data = data01.sample.temp), subset(data01.sample.temp, is.na(data01.sample.temp$y)))
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table01[3,1] <- mean(b1vec)
Table01[3,2] <- mean(b2vec)
Table01[3,3] <- mean(b3vec)
#standard deviation
Table01[3,4]<-sd(b1vec)
Table01[3,5]<-sd(b2vec)
Table01[3,6]<-sd(b3vec)
#coverage
Table01[3,7]<-sum(b1vec_true)/1000
Table01[3,8]<-sum(b2vec_true)/1000
Table01[3,9]<-sum(b3vec_true)/1000
Table01[3,10]<-mean(msevec)
Table01[3,11]<-"Regression Imputation"
#Regression imputation for data 2
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data02[sample(c(1:nrow(data02)),500,replace = TRUE), ]#1
#linear model with regression imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] <- predict(lm(y~.,na.action=na.omit, data = data01.sample.temp), subset(data01.sample.temp, is.na(data01.sample.temp$y)))
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table02[3,1] <- mean(b1vec)
Table02[3,2] <- mean(b2vec)
Table02[3,3] <- mean(b3vec)
#standard deviation
Table02[3,4]<-sd(b1vec)
Table02[3,5]<-sd(b2vec)
Table02[3,6]<-sd(b3vec)
#coverage
Table02[3,7]<-sum(b1vec_true)/1000
Table02[3,8]<-sum(b2vec_true)/1000
Table02[3,9]<-sum(b3vec_true)/1000
Table02[3,10]<-mean(msevec)
Table02[3,11]<-"Regression Imputation"
#Regression imputation for data 3
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data03[sample(c(1:nrow(data03)),500,replace = TRUE), ]#1
#linear model with regression imputation
data01.sample.temp$y[is.na(data01.sample.temp$y)] <- predict(lm(y~.,na.action=na.omit, data = data01.sample.temp), subset(data01.sample.temp, is.na(data01.sample.temp$y)))
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table03[3,1] <- mean(b1vec)
Table03[3,2] <- mean(b2vec)
Table03[3,3] <- mean(b3vec)
#standard deviation
Table03[3,4]<-sd(b1vec)
Table03[3,5]<-sd(b2vec)
Table03[3,6]<-sd(b3vec)
#coverage
Table03[3,7]<-sum(b1vec_true)/1000
Table03[3,8]<-sum(b2vec_true)/1000
Table03[3,9]<-sum(b3vec_true)/1000
Table03[3,10]<-mean(msevec)
Table03[3,11]<-"Regression Imputation"
#Stochastic Regression imputation for data 1
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data01[sample(c(1:nrow(data01)),500,replace = TRUE), ]#1
#linear model with regression imputation
df <- mice(data01.sample.temp, method="norm.nob", m=1, printFlag = F)
data01.sample.temp <- complete(df,1)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table01[4,1] <- mean(b1vec)
Table01[4,2] <- mean(b2vec)
Table01[4,3] <- mean(b3vec)
#standard deviation
Table01[4,4]<-sd(b1vec)
Table01[4,5]<-sd(b2vec)
Table01[4,6]<-sd(b3vec)
#coverage
Table01[4,7]<-sum(b1vec_true)/1000
Table01[4,8]<-sum(b2vec_true)/1000
Table01[4,9]<-sum(b3vec_true)/1000
Table01[4,10]<-mean(msevec)
Table01[4,11]<-"Stochastic Regression Imputation"
#Stochastic Regression imputation for data 1
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data02[sample(c(1:nrow(data02)),500,replace = TRUE), ]#1
#linear model with regression imputation
df <- mice(data01.sample.temp, method="norm.nob", m=1, printFlag = F)
data01.sample.temp <- complete(df,1)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table02[4,1] <- mean(b1vec)
Table02[4,2] <- mean(b2vec)
Table02[4,3] <- mean(b3vec)
#standard deviation
Table02[4,4]<-sd(b1vec)
Table02[4,5]<-sd(b2vec)
Table02[4,6]<-sd(b3vec)
#coverage
Table02[4,7]<-sum(b1vec_true)/1000
Table02[4,8]<-sum(b2vec_true)/1000
Table02[4,9]<-sum(b3vec_true)/1000
Table02[4,10]<-mean(msevec)
Table02[4,11]<-"Stochastic Regression Imputation"
#Stochastic Regression imputation for data 1
b1vec<-vector()
b2vec<-vector()
b3vec<-vector()
msevec<-vector()
b1vec_lwr<-vector()
b1vec_upr<-vector()
b2vec_lwr<-vector()
b2vec_upr<-vector()
b3vec_lwr<-vector()
b3vec_upr<-vector()
b1vec_true<-vector()
b2vec_true<-vector()
b3vec_true<-vector()
for (i in 1:1000){
# re-sample every time
data01.sample.temp <- data03[sample(c(1:nrow(data03)),500,replace = TRUE), ]#1
#linear model with regression imputation
df <- mice(data01.sample.temp, method="norm.nob", m=1, printFlag = F)
data01.sample.temp <- complete(df,1)
lm.sample.temp <- lm(y~., data = data01.sample.temp)
# regression paramters
b1vec[i] = coef(lm.sample.temp)[1]
b2vec[i] = coef(lm.sample.temp)[2]
b3vec[i] = coef(lm.sample.temp)[3]
# calculate MSE, store in ith position in vector intiated above
msevec[i] =  anova(lm.sample.temp)$`Mean Sq`[3]
#confidence intervals
b1vec_lwr[i] = confint(lm.sample.temp)[1,1]
b1vec_upr[i] = confint(lm.sample.temp)[1,2]
b2vec_lwr[i] = confint(lm.sample.temp)[2,1]
b2vec_upr[i] = confint(lm.sample.temp)[2,2]
b3vec_lwr[i] = confint(lm.sample.temp)[3,1]
b3vec_upr[i] = confint(lm.sample.temp)[3,2]
b1vec_true[i] = ifelse(b1vec_upr[i]>29.3 & b1vec_lwr[i]<29.3,1,0)
b2vec_true[i] = ifelse(b2vec_upr[i]>5.6 & b2vec_lwr[i]<5.6,1,0)
b3vec_true[i] = ifelse(b3vec_upr[i]>3.8 & b3vec_lwr[i]<3.8,1,0)
}
#mean
Table03[4,1] <- mean(b1vec)
Table03[4,2] <- mean(b2vec)
Table03[4,3] <- mean(b3vec)
#standard deviation
Table03[4,4]<-sd(b1vec)
Table03[4,5]<-sd(b2vec)
Table03[4,6]<-sd(b3vec)
#coverage
Table03[4,7]<-sum(b1vec_true)/1000
Table03[4,8]<-sum(b2vec_true)/1000
Table03[4,9]<-sum(b3vec_true)/1000
Table03[4,10]<-mean(msevec)
Table03[4,11]<-"Stochastic Regression Imputation"
Table01
Table02
Table01
View(Table01)
View(Table02)
View(Table03)
library(rrp)
imputed <- rrp.impute(data01.sample.temp)$new.data
rrp.impute(data01.sample.temp)
data01.sample.temp <- data03[sample(c(1:nrow(data03)),500,replace = TRUE), ]#1
#linear model with regression imputation
imputed <- rrp.impute(data01.sample.temp)
imputed <- rrp.impute(data01.sample.temp)$new.data
imputed <- rrp.impute(data01.sample.temp)$new.data
imputed <- rrp.impute(data01.sample.temp)
imputed <- rrp.impute(unlist(data01.sample.temp))$new.data
unlist(data01.sample.temp)
imputed <- rrp.impute(data01.sample.temp)$new.data
imputed <- rrp.impute(as.numeric(data01.sample.temp)$new.data
)
imputed <- rrp.impute(as.numeric(data01.sample.temp$y))$new.data
cov(data01.sample.temp, use="pairwise.complete.obs")
summary(cov(data01.sample.temp, use="pairwise.complete.obs"))
View(Table02)
View(Table03)
View(Table01)
